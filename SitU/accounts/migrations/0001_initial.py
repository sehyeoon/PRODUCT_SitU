# Generated by Django 5.0.3 on 2024-07-21 08:31

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cafe',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cafe_id', models.CharField(max_length=50, unique=True)),
                ('cafe_pw', models.CharField(max_length=100)),
                ('cafe_name', models.CharField(max_length=100)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('ceo_name', models.CharField(blank=True, max_length=100, null=True)),
                ('cafe_time', models.CharField(blank=True, max_length=100, null=True)),
                ('ceo_tel', models.CharField(blank=True, max_length=20, null=True)),
                ('cafe_region', models.CharField(blank=True, max_length=100, null=True)),
                ('cafe_tel', models.CharField(blank=True, max_length=20, null=True)),
                ('cafe_address', models.CharField(blank=True, max_length=255, null=True)),
                ('cafe_photo', models.ImageField(blank=True, null=True, upload_to='cafe_photos/')),
                ('seats_count', models.IntegerField(blank=True, null=True)),
                ('empty_seats', models.IntegerField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
